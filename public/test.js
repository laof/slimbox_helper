const puppeteer = require('puppeteer');
const CryptoJS = require('crypto-js');
const org = 'https://ln' + 'cn.org';

async function list() {
  const browser = await puppeteer.launch({ headless: true });
  const page = await browser.newPage();

  await page.goto(org + '/api/ssr-list');

  // Set screen size
  await page.setViewport({ width: 1080, height: 1024 });
  await page.waitForSelector('body');

  const txt = await page.evaluate(
    () => document.querySelector('body').innerHTML
  );

  await browser.close();

  return txt;
}

// const test = `<pre style="word-wrap: break-word; white-space: pre-wrap;">{"date":"01月28日 07点16分","ssrNames":[{"name":"俄罗斯A"},{"name":"俄罗斯B"},{"name":"俄罗斯C"},{"name":"俄罗斯D"},{"name":"俄罗斯Q"},{"name":"俄罗斯R"},{"name":"俄罗斯S"},{"name":"俄罗斯T"},{"name":"俄罗斯U"},{"name":"俄罗斯V"},{"name":"俄罗斯W"},{"name":"俄罗斯X"}],"ssrs":"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2022bTFiMTFqc1RrZ3FHUDVBdA","notice":""}</pre>`;

async function getssr() {
  const str = await list();
  const start = str.indexOf('{');
  const end = str.lastIndexOf('}') + 1;
  const obj = JSON.parse(str.substring(start, end));
  return obj.ssrs;
}

function h(t, e) {
  let r = CryptoJS.enc.Utf8.parse(e);
  var n = CryptoJS.AES.decrypt(t, r, {
    mode: CryptoJS.mode.ECB,
    padding: CryptoJS.pad.Pkcs7,
  });
  return CryptoJS.enc.Utf8.stringify(n).toString();
}

async function main() {
  const str = await getssr();
  const s = str.split('2022');
  const ssr = h(s[0], Buffer.from(s[1], 'base64').toString());
  const list = JSON.parse(ssr.replaceAll('\n', ''));
  list.forEach((obj) => {
    console.log(obj.url);
  });
}

main();
